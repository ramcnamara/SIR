package swingui;

import java.awt.BorderLayout;
import java.awt.Dialog;
import java.awt.FlowLayout;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;
import javax.swing.JScrollPane;
import net.miginfocom.swing.MigLayout;
import java.awt.Component;

/**
 * A very basic dialog that allows the entry of a line of text.
 * 
 * @author Robyn
 * 
 */
public class SIREditDialog extends JDialog implements ActionListener {

	private static final long serialVersionUID = 1L;
	private final JPanel contentPanel = new JPanel();
	private JTextArea textArea;
	private String originalValue;
	private JLabel lblComponent;

	/**
	 * Create the dialog.
	 * 
	 * @param name
	 *            the name of the component being edited
	 * @param currentValue
	 *            the current value, which will be displayed when the dialog is
	 *            first created
	 */
	public SIREditDialog(String name, String currentValue) {

		// Mostly generated by WindowBuilder.
		super((Window) null, "Editing " + name,
				Dialog.ModalityType.APPLICATION_MODAL);
		originalValue = currentValue;
		setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 450, 220);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(new MigLayout("", "[][grow,fill]", "[119.00,grow,fill]"));
		
		lblComponent = new JLabel(name);
		lblComponent.setAlignmentX(Component.CENTER_ALIGNMENT);
		lblComponent.setAlignmentY(Component.TOP_ALIGNMENT);
		lblComponent.setHorizontalAlignment(SwingConstants.LEFT);
		contentPanel.add(lblComponent, "alignx center,aligny top");
		
		JPanel scrollContent = new JPanel();
		JScrollPane scrollPane = new JScrollPane(scrollContent);
		scrollPane.setAlignmentY(Component.TOP_ALIGNMENT);
		scrollPane.setAlignmentX(Component.LEFT_ALIGNMENT);
		contentPanel.add(scrollPane);
		scrollContent.setLayout(new BorderLayout(0, 0));

		textArea = new JTextArea(currentValue);
		textArea.setWrapStyleWord(true);
		textArea.setRows(5);
		textArea.setLineWrap(true);
		textArea.setColumns(10);
		scrollContent.add(textArea);

		JPanel buttonPane = new JPanel();
		buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
		getContentPane().add(buttonPane, BorderLayout.SOUTH);

		JButton okButton = new JButton("OK");
		okButton.setActionCommand("OK");
		buttonPane.add(okButton);
		getRootPane().setDefaultButton(okButton);
		okButton.addActionListener(this);

		JButton cancelButton = new JButton("Cancel");
		cancelButton.setActionCommand("Cancel");
		buttonPane.add(cancelButton);
		cancelButton.addActionListener(this);
	}

	public void showDialog() {
		repaint();
		setVisible(true);
	}

	public String getValue() {
		return textArea.getText();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		String action = e.getActionCommand();
		if (action.equals("Cancel"))
			textArea.setText(originalValue);
		this.setVisible(false);
	}

}
